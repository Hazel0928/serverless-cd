import{c as a}from"./index.js";const o={labelCol:{fixedSpan:8},wrapperCol:{span:16}},s={init:{label:"\u6682\u672a\u90e8\u7f72"},pending:{icon:"clock1",color:"color-warning",label:"\u7b49\u5f85\u90e8\u7f72"},success:{icon:"success-filling",color:"color-success",label:"\u90e8\u7f72\u6210\u529f"},failure:{icon:"error",color:"color-error",label:"\u90e8\u7f72\u5931\u8d25"},cancelled:{icon:"prompt",color:"color-gray",label:"\u5df2\u53d6\u6d88\u90e8\u7f72"},skipped:{icon:"minus-circle-fill",label:"\u8df3\u8fc7\u90e8\u7f72"},running:{icon:"loading",label:"\u90e8\u7f72\u4e2d"}},l=async o=>{const{data:s}=await a.get("/api/flow/task/list",{params:o});return s},c=async o=>{const{data:s}=await a.get("/api/flow/task/get",{params:o});return s},i=async o=>{const{data:s}=await a.get("/api/flow/task/log",{params:o});return s},n=async o=>await a.post("/api/flow/task/remove",o),r=async o=>await a.post("/api/flow/dispatch/redeploy",o),t=async o=>await a.post("/api/flow/dispatch/manual",o),e=async o=>await a.post("/api/flow/dispatch/cancel",o);export{s as D,o as F,r as a,c as b,e as c,i as d,l as g,t as m,n as r};
