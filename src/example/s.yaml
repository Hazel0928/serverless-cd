extend: ./s.base.yaml

services:
  ui:
    component: fc
    actions:
      pre-deploy:
        - run: npm run build
          path: "../console/ui"
        - plugin: website-fc
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.uiFunctionName}
        description: serverless-cd 前端应用
        runtime: nodejs14
        codeUri: ../console/ui/build
        handler: index.handler
        memorySize: 640
        timeout: 12
        instanceConcurrency: 20
      triggers:
        - ${vars.httpTriggerAll}

  admin:
    component: fc
    actions:
      pre-deploy:
        - plugin: get-http-function-url # 获取依赖的 trigger 函数的触发器地址，也可以直接修改 environmentVariables 的 WEBHOOKURL
          args:
            region: ${vars.region}
            serviceName: ${vars.service.name}
            functionName: ${vars.trigerFunctionName}
            envKey: WEBHOOKURL
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.adminFunctionName}
        description: serverless-cd 前端应用接口
        runtime: custom
        codeUri: ../console/admin
        handler: index.handler
        memorySize: 640
        timeout: 360
        caPort: 9000
        instanceConcurrency: 5
        customRuntimeConfig:
          command:
            - node
            - index.js
        environmentVariables:
          REGION: ${vars.region}
          SERVICE_NAME: ${vars.service.name}
          WORKER_FUNCTION_NAME: ${vars.workerFunctionName} # worker 函数的名称
          DOWNLOAD_CODE_DIR: ${env.DOWNLOAD_CODE_DIR}
          CD_PIPLINE_YAML: ${env.CD_PIPLINE_YAML}
          GITHUB_CLIENT_ID: ${env.GITHUB_CLIENT_ID} # 
          GITHUB_CLIENT_SECRET: ${env.GITHUB_CLIENT_SECRET} # 是不是在 运行 init 之后在让用户手动填写比较好，因为我们能提示到下面的 callback
          GITHUB_REDIRECT_URI: http://${env.DOMAIN}/auth/github/callback
          ACCOUNTID: ${env.ACCOUNTID}
          ACCESS_KEY_ID: ${env.ACCESS_KEY_ID}
          ACCESS_KEY_SECRET: ${env.ACCESS_KEY_SECRET}
          OSS_BUCKET: ${env.OSS_BUCKET}
          OTS_INSTANCE_NAME: ${env.OTS_INSTANCE_NAME}
          OTS_TASK_TABLE_NAME: ${env.OTS_TASK_TABLE_NAME}
          OTS_TASK_INDEX_NAME: ${env.OTS_TASK_INDEX_NAME}
          OTS_USER_TABLE_NAME: ${env.OTS_USER_TABLE_NAME}
          OTS_USER_INDEX_NAME: ${env.OTS_USER_INDEX_NAME}
          OTS_APP_TABLE_NAME: ${env.OTS_APP_TABLE_NAME}
          OTS_APP_INDEX_NAME: ${env.OTS_APP_INDEX_NAME}
          OTS_SESSION_TABLE_NAME: ${env.OTS_SESSION_TABLE_NAME}
          OTS_TOKEN_TABLE_NAME: ${env.OTS_TOKEN_TABLE_NAME}
          OTS_TOKEN_INDEX_NAME: ${env.OTS_TOKEN_INDEX_NAME}
          SESSION_EXPIRATION: ${env.SESSION_EXPIRATION}
      triggers:
        - ${vars.httpTriggerAll}

  compose:
    component: fc-domain
    props:
      region: ${vars.region}
      customDomain:
        domainName: ${env.DOMAIN}
        protocol: HTTP
        routeConfigs:
          - path: /*
            serviceName: ${vars.service.name}
            functionName: ${vars.uiFunctionName}
          - path: /api/*
            serviceName: ${vars.service.name}
            functionName: ${vars.adminFunctionName}
